#云编译公用核心
name: IWRT-RAX3000M-NAND

on:
  #公用核心标识
  workflow_call:
    inputs:
      OWRT_TARGET:
        required: true
        type: string
      OWRT_THEME:
        required: true
        type: string
      OWRT_NAME:
        required: true
        type: string
      OWRT_URL:
        required: true
        type: string
      OWRT_BRANCH:
        required: true
        type: string
      OWRT_PW:
        required: true
        type: string
      OWRT_IP:
        required: true
        type: string

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  OWRT_TARGET: ${{inputs.OWRT_TARGET}}
  OWRT_THEME: ${{inputs.OWRT_THEME}}
  OWRT_NAME: ${{inputs.OWRT_NAME}}
  OWRT_URL: ${{inputs.OWRT_URL}}
  OWRT_BRANCH: ${{inputs.OWRT_BRANCH}}
  OWRT_PW: ${{inputs.OWRT_PW}}
  OWRT_IP: ${{inputs.OWRT_IP}}

jobs:
  iwrt_core:
    runs-on: ubuntu-latest
    steps:
      - name: 检查
        uses: actions/checkout@main

      - name: 初始化环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt -yqq update
          sudo -E apt -yqq purge $(cat $GITHUB_WORKSPACE/Depends.txt | sed -n "2{s/\r$//;p;q}")
          sudo -E apt -yqq full-upgrade
          sudo -E apt -yqq install $(cat $GITHUB_WORKSPACE/Depends.txt | sed -n "3{s/\r$//;p;q}")
          sudo -E apt -yqq autoremove --purge
          sudo -E apt -yqq autoclean
          sudo -E apt -yqq clean
          sudo -E systemctl daemon-reload
          sudo -E timedatectl set-timezone "Asia/Shanghai"

      - name: 设置环境
        run: |
          export OWRT_DATE=$(TZ=UTC-8 date +"%y.%m.%d_%H.%M.%S")
          export OWRT_SOURCE=$(echo $OWRT_URL | cut -d '/' -f 5-)

          echo "OWRT_SOURCE=$OWRT_SOURCE" >> $GITHUB_ENV
          echo "OWRT_TARGET=$OWRT_TARGET" >> $GITHUB_ENV
          echo "OWRT_DATE=$OWRT_DATE" >> $GITHUB_ENV
          echo "OWRT_PW=$OWRT_PW" >> $GITHUB_ENV
          echo "OWRT_IP=$OWRT_IP" >> $GITHUB_ENV

      - name: 检查脚本
        run: |
          cd ./Scripts

          dos2unix ./*.sh
          chmod +x ./*.sh

      - name: 克隆源码
        run: |
          git clone -b $OWRT_BRANCH $OWRT_URL ./owrt

      - name: 开启缓存
        uses: klever1988/cachewrtbuild@main
        with:
          ccache: 'true'
          mixkey: 'openwrt23-cortexa53'
          prefix: ./owrt

      - name: 自定义 feeds
        run: |
          cd ./owrt
          echo 'src-git smpackage https://github.com/laomuyear/small-package' >> feeds.conf.default

      - name: 更新 & 安装 feeds
        run: |
          cd ./owrt

          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 执行自定义脚本
        run: |
          cd ./owrt

          $GITHUB_WORKSPACE/Scripts/Settings.sh

          cd ./package

          $GITHUB_WORKSPACE/Scripts/Plugins.sh

      - name: 执行自定义设置
        run: |
          cd ./owrt

          rm -rf ./tmp* ./.config*
          cat $GITHUB_WORKSPACE/Config/$OWRT_TARGET.txt $GITHUB_WORKSPACE/Config/RAX3000M-NAND-23.05.txt >> .config

          $GITHUB_WORKSPACE/Scripts/Extras.sh

          make defconfig

      - name: 使用 nx30pro eeprom
        run: |
         mkdir -p openwrt/target/linux/mediatek/filogic/base-files/lib/firmware/mediatek
         cp eeprom/nx30pro_eeprom.bin openwrt/target/linux/mediatek/filogic/base-files/lib/firmware/mediatek
         sed -i -e '/caldata_extract_mmc "factory" 0x0 0x1000/ a\           
         cp /lib/firmware/mediatek/nx30pro_eeprom.bin /lib/firmware/mediatek/mt7981_eeprom_mt7976_dbdc.bin' openwrt/target/linux/mediatek/filogic/base-files/etc/hotplug.d/firmware/11-mt76-caldata

      - name: 清理目录
        run: |
          cd ./owrt

          make dirclean

      - name: 下载软件包
        run: |
          cd ./owrt

          make download -j$(nproc)

      - name: 编译固件中
        run: |
          cd ./owrt

          make -j$(nproc) || make -j1 V=s

          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1
          echo "======================="

      - name: 重命名固件包
        run: |
          cd ./owrt && mkdir ./upload

          rm -rf $(find ./bin/targets/ -iregex ".*\(json\|manifest\|buildinfo\|sha256sums\|packages\)$")
          cp -rf $(find ./bin/targets/ -type f -iname "*.*") ./upload/
          cp -rf ./.config ./upload/Config_"$OWRT_TARGET"_"$OWRT_SOURCE"_"$OWRT_DATE".txt

          cd ./upload

          $GITHUB_WORKSPACE/Scripts/Renames.sh

      - name: 上传固件发布
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{env.OWRT_TARGET}}_${{env.OWRT_SOURCE}}_${{env.OWRT_DATE}}
          files: ./owrt/upload/*.*
          body: |
            源码：${{env.OWRT_SOURCE}}
            平台：${{env.OWRT_TARGET}}
            密码：${{env.OWRT_PW}}
            地址：${{env.OWRT_IP}}

      - name: 删除旧发布的固件
        uses: dev-drprasad/delete-older-releases@v0.2.1
        with:
          keep_latest: 6
          delete_tags: true

      - name: 删除过时工作流程
        uses: Mattraks/delete-workflow-runs@v2
        with:
          retain_days: 0
          keep_minimum_runs: 1
